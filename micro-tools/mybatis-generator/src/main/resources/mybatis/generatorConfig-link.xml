<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
<!--    <classPathEntry-->
<!--            location="${localRepository}/mysql/mysql-connector-java/8.0.20/mysql-connector-java-8.0.20.jar"/>-->

    <context id="MysqlTables" targetRuntime="MyBatis3">

        <!-- 内容格式：(property*,plugin*,commentGenerator?,(connectionFactory|jdbcConnection),javaTypeResolver?,javaModelGenerator,sqlMapGenerator?,javaClientGenerator?,table+)-->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <!--注释-->
        <commentGenerator type="customize.FelixCommentGenerator">
            <!--排除注释中的生成日期-->
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="false"/>
            <!--增加数据库中的字段备注信息-->
            <property name="addRemarkComments" value="true"/>
        </commentGenerator>

        <!--数据库配置-->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://192.168.159.111:3306/micro_govern"
                        userId="root"
                        password="123456">
        </jdbcConnection>

        <!--java类型转换处理-->
        <!--type:自定义类型转换处理，主要是把tinyint类型的映射到类中处理为Integer-->
        <!--forceBigDecimals:针对数据库字段类型是decimal/numeric类型的，是否用BigDecimal类型接收，false的时候，会根据数据长度调节，看是BigDecimal/Long/Integer/Short-->
        <!--useJSR310Types:针对 DATE, TIME, and TIMESTAMP 的日期处理，true的话，则会使用LocalDate,LocalTime,LocalDateTime对应处理，false则都用Date类型-->
        <javaTypeResolver type="customize.FelixJavaTypeResolver">
            <property name="forceBigDecimals" value="false"/>
            <property name="useJSR310Types" value="true"/>
        </javaTypeResolver>
        <!--java模型生成配置-->
        <!--targetPackage 有个特殊值MAVEN，大小写敏感，如果设置这个值，则默认生成到maven的输出路径，target/..;也可以设置正常路径，如：src/mybatis,但是相应目录必须存在-->
        <javaModelGenerator targetPackage="model" targetProject="micro-tools\mybatis-generator\src\mybatis">
            <!--在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false-->
            <property name="enableSubPackages" value="true"/>
            <!--设置是否在setter方法中，对String类型字段调用trim()方法-->
            <property name="trimStrings" value="false"/>
        </javaModelGenerator>
        <!--映射文件生成配置-->
        <sqlMapGenerator targetPackage="xml" targetProject="micro-tools\mybatis-generator\src\mybatis">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!--
         1. ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；
         2. MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；
         3. XMLMAPPER：会生成Mapper接口，接口完全依赖XML；
        -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="dao" targetProject="micro-tools\mybatis-generator\src\mybatis">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <table tableName="micro_config" domainObjectName="MicroConfig"
               enableSelectByExample="false"
               enableDeleteByExample="false"
               enableCountByExample="false"
               enableUpdateByExample="false"
               selectByPrimaryKeyQueryId="false"
               selectByExampleQueryId="false">
            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>
        </table>
    </context>


</generatorConfiguration>